{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Launch On Hardware",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/firmware/build/Wunderkiste/Wunderkiste.elf",
            "args": [],
            "stopAtEntry": true,
            "cwd": "${workspaceFolder}/firmware",
            "environment": [],
            "externalConsole": false,
            "debugServerArgs": "-f interface/stlink-v2-1.cfg -f target/stm32f4x.cfg -c init -c \"reset init\"",
            "serverLaunchTimeout": 20000,
            "filterStderr": true,
            "filterStdout": false,
            "serverStarted": "target halted due to debug-request, current mode: Thread",
            "preLaunchTask": "build-Wunderkiste",
            "setupCommands": [
                { "text": "-target-select remote localhost:3333", "description": "connect to target", "ignoreFailures": false },
                { "text": "-file-exec-and-symbols ${workspaceFolder}/firmware/build/Wunderkiste/Wunderkiste.elf", "description": "load file", "ignoreFailures": false},
                { "text": "-interpreter-exec console \"monitor endian little\"", "ignoreFailures": false },
                { "text": "-interpreter-exec console \"monitor reset\"", "ignoreFailures": false },
                { "text": "-interpreter-exec console \"monitor halt\"", "ignoreFailures": false },
                { "text": "-interpreter-exec console \"monitor arm semihosting enable\"", "ignoreFailures": false },
                { "text": "-target-download", "description": "flash target", "ignoreFailures": false }
            ],
            "logging": {
                "moduleLoad": true,
                "trace": true,
                "engineLogging": true,
                "programOutput": true,
                "exceptions": true
            },
            "linux": {
                "MIMode": "gdb",
                "MIDebuggerPath": "${env:HOME}/dev/gcc-arm-none-eabi-9-2020-q2-update/bin/arm-none-eabi-gdb",
                "debugServerPath": "openocd"
            },
            "osx": {
                "MIMode": "gdb",
                "MIDebuggerPath": "${env:HOME}/dev/gcc-arm-none-eabi-9-2020-q2-update/bin/arm-none-eabi-gdb",
                "debugServerPath": "openocd"
            },
            "windows": {
                "MIMode": "gdb",
                "MIDebuggerPath": "C:\\Program Files (x86)\\GNU Arm Embedded Toolchain\\9 2020-q2-update\\bin\\arm-none-eabi-gdb.exe",
                "debugServerPath": "openocd.exe",
                "cwd": "${workspaceFolder}\\firmware\\build\\Wunderkiste",
                "externalConsole" : true,
                "setupCommands": [
                    { "text": "-target-select remote localhost:3333", "description": "connect to target", "ignoreFailures": false },
                    // cygwin environment makes openocd believe it needs posix format for the folders. I tried have to use 
                    // the "command:extension.commandvariable.workspace.workspaceFolderPosix" to generate a posix-version of the workspace root folder path.
                    // It doesn't work. I have not found a better solution than providing the full absolute path here...
                    { "text": "-file-exec-and-symbols C:/Users/johannes/Documents/Repos/Wunderkiste/firmware/build/Wunderkiste/Wunderkiste.elf", "description": "load file", "ignoreFailures": false},
                    { "text": "-interpreter-exec console \"monitor endian little\"", "ignoreFailures": false },
                    { "text": "-interpreter-exec console \"monitor reset\"", "ignoreFailures": false },
                    { "text": "-interpreter-exec console \"monitor halt\"", "ignoreFailures": false },
                    { "text": "-interpreter-exec console \"monitor arm semihosting enable\"", "ignoreFailures": false },
                    { "text": "-target-download", "description": "flash target", "ignoreFailures": false }
                ]
            }
        },
        {
            "name": "Launch Tests Locally",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/firmware/tests/build/bin/Wunderkiste_gtest",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}/firmware/tests/build/bin",
            "environment": [],
            "externalConsole": false,
            "logging": {
                "engineLogging": false
            },
            "preLaunchTask": "buildTests-Wunderkiste",
            
            "osx": {
                "MIMode": "lldb",
            },
            "windows": {
                "MIMode": "gdb",
            }
        }
    ]
}